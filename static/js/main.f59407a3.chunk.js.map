{"version":3,"sources":["APIKey.js","components/spinner.gif","components/Navbar.jsx","actions/types.js","actions/searchActions.js","components/SearchForm.jsx","components/MovieCard.jsx","components/MoviesContainer.jsx","components/Spinner.jsx","components/Landing.jsx","components/Movie.jsx","reducers/searchReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","APIKey","Navbar","className","href","style","color","id","setLoading","type","SearchForm","onChange","e","props","searchMovie","target","value","onSubmit","preventDefault","fetchMovies","text","borderRadius","textShadow","this","width","marginLeft","name","placeholder","boxShadow","Component","connect","state","movies","dispatch","payload","axios","get","then","response","data","catch","err","console","log","MovieCard","movie","src","Poster","alt","Title","Year","to","imdbID","MoviesContainer","content","Response","Search","map","index","key","paddingLeft","Spinner","spinner","margin","display","Landing","loading","Movie","fetchMovie","match","params","movieInfo","Genre","Released","Rated","imdbRating","Director","Writer","Actors","Plot","rel","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f59407a3.chunk.js","sourcesContent":["module.exports={\r\n    APIKey:'206cf7f6'\r\n};","module.exports = __webpack_public_path__ + \"static/media/spinner.9604d1e8.gif\";","import React from 'react'\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <div>\r\n        <nav className=\"navbar  navbar-light  bg-dark mb-5\">\r\n        <div className=\"container\">\r\n          <div className=\"navbar-header\">\r\n            <a className=\"navbar-brand text-white text-lg brand-text\" href=\"/\">\r\n              <span style={{color:\"yellow\"}}>Movies</span> Info\r\n            </a>\r\n          </div>\r\n          <ul className=\"navbar-nav ml-auto text-light d-inline-block\">\r\n            <li className=\"nav-item d-inline-block mr-4\">\r\n              <i className=\"fab fa-imdb fa-3x\" id=\"imdb-logo\" />\r\n            </li>\r\n            <li className=\"nav-item d-inline-block mr-4\">\r\n              <i className=\"fas fa-user fa-3x\" id=\"user-logo\" />\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n        </div>\r\n    )\r\n}\r\n","export const SEARCH_MOVIE = 'SEARCH_MOVIE';\r\nexport const FETCH_MOVIES = 'FETCH_MOVIES';\r\nexport const FETCH_MOVIE = 'FETCH_MOVIE';\r\nexport const LOADING = 'LOADING';","import { SEARCH_MOVIE, FETCH_MOVIES, FETCH_MOVIE, LOADING } from './types';\r\nimport axios from 'axios';\r\n\r\nimport { APIKey } from '../APIKey';\r\n\r\nexport const searchMovie = text => dispatch => {\r\n  dispatch({\r\n    type: SEARCH_MOVIE,\r\n    payload: text\r\n  });\r\n};\r\n\r\nexport const fetchMovies = text => dispatch => {\r\n  axios.get(`https://www.omdbapi.com/?apikey=${APIKey}&s=${text}`)\r\n    .then(response =>\r\n      dispatch({\r\n        type: FETCH_MOVIES,\r\n        payload: response.data\r\n      })\r\n    )\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const fetchMovie = id => dispatch => {\r\n  axios\r\n    .get(`https://www.omdbapi.com/?apikey=${APIKey}&i=${id}`)\r\n    .then(response =>\r\n      dispatch({\r\n        type: FETCH_MOVIE,\r\n        payload: response.data\r\n      })\r\n    )\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const setLoading = () => {\r\n  return {\r\n    type: LOADING\r\n  };\r\n};","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport {\r\n  searchMovie,\r\n  fetchMovies,\r\n  setLoading\r\n} from '../actions/searchActions';\r\n\r\nexport class SearchForm extends Component {\r\n  onChange = e => {\r\n    this.props.searchMovie(e.target.value);\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.fetchMovies(this.props.text);\r\n    this.props.setLoading();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div  className=\"jumbotron jumbotron-fluid mt-5 text-center\" id=\"img\">\r\n        <div className=\"container\" style={{borderRadius:\"15px\"}}>\r\n          <h1 className=\"display-4 mb-3\" style={{  color:\"white\", textShadow: \"1px 1px 2px black, 0 0 25px blue, 0 0 5px black\"}}>\r\n            <i className=\"fa fa-search\"  /> Search for a <span style={{color:\"yellow\"}}>movie</span><i className=\"fa fa-search p-3\"  />\r\n          </h1>\r\n          <form id=\"searchForm\" onSubmit={this.onSubmit}>\r\n            <input\r\n            style={{width: \"60%\", marginLeft: \"20%\"}}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"searchText\"\r\n              placeholder=\"Search Movies ...\"\r\n              onChange={this.onChange}\r\n            />\r\n            <button type=\"submit\" className=\"btn btn-danger btn-bg mt-3\" style={{boxShadow: \"0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19)\"}}>\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  text: state.movies.text\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { searchMovie, fetchMovies, setLoading }\r\n)(SearchForm);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class MovieCard extends Component {\r\n  render() {\r\n    const { movie } = this.props;\r\n    return (\r\n      <div className=\"col-md-3 mb-5\">\r\n        <div className=\"card card-body bg-dark text-center h-100\">\r\n          <img className=\"w-100 mb-2\" src={movie.Poster} alt=\"Movie Cover\" />\r\n          <h5 className=\"text-light card-title\">\r\n            {movie.Title} - {movie.Year}\r\n          </h5>\r\n          <Link className=\"btn btn-primary\" to={'/movie/' + movie.imdbID}>\r\n            Movie Details\r\n            <i className=\"fas fa-chevron-right\" />\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieCard;","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport MovieCard from './MovieCard';\r\n\r\nexport class MoviesContainer extends Component {\r\n  render() {\r\n    const { movies } = this.props;\r\n    let content = '';\r\n\r\n    content =\r\n      movies.Response === 'True'\r\n        ? movies.Search.map((movie, index) => (\r\n            <MovieCard key={index} movie={movie} />\r\n          ))\r\n        : <h3 style={{color:\"red\", paddingLeft: \"35%\"}}>Search Valid Movie above...</h3>;\r\n    return <div className=\"row\">{content}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  movies: state.movies.movies\r\n});\r\n\r\nexport default connect(mapStateToProps)(MoviesContainer);","import React from 'react'\r\nimport spinner from './spinner.gif'\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <div>\r\n      <img\r\n        src={spinner}\r\n        style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n        alt=\"Loading...\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport SearchForm from './SearchForm';\r\nimport MoviesContainer from './MoviesContainer';\r\nimport Spinner from '../components/Spinner';\r\n\r\nexport class Landing extends Component {\r\n    render() {\r\n      const { loading } = this.props;\r\n      return (\r\n        <div className=\"container\" >\r\n          <SearchForm />\r\n          {loading ? <Spinner /> : <MoviesContainer />}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  const mapStateToProps = state => ({\r\n    loading: state.movies.loading\r\n  });\r\n  \r\n  export default connect(mapStateToProps)(Landing);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { fetchMovie, setLoading } from '../actions/searchActions';\r\n\r\nimport Spinner from './Spinner';\r\n\r\nexport class Movie extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchMovie(this.props.match.params.id);\r\n    this.props.setLoading();\r\n  }\r\n  render() {\r\n    const { loading, movie } = this.props;\r\n\r\n    let movieInfo = (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 card card-body\">\r\n            <img src={movie.Poster} className=\"thumbnail\" alt=\"Poster\" />\r\n          </div>\r\n          <div className=\"col-md-8\">\r\n            <h2 className=\"mb-4\">{movie.Title}</h2>\r\n            <ul className=\"list-group\">\r\n              <li className=\"list-group-item\">\r\n                <strong>Genre:</strong> {movie.Genre}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Released:</strong> {movie.Released}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Rated:</strong> {movie.Rated}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>IMDB Rating:</strong> {movie.imdbRating}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Director:</strong> {movie.Director}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Writer:</strong> {movie.Writer}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Actors:</strong> {movie.Actors}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"card card-body bg-dark my-5 text-light\">\r\n            <div className=\"col-md-12\">\r\n              <h3>About </h3>\r\n              {movie.Plot}\r\n              <hr />\r\n              <a\r\n                href={'https://www.imdb.com/title/' + movie.imdbID}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"btn btn-primary\"\r\n              >\r\n                View on IMDB\r\n              </a>\r\n              <Link to=\"/\" className=\"btn btn-default text-light\">\r\n                Go Back To Search\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    let content = loading ? <Spinner /> : movieInfo;\r\n    return <div>{content}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loading: state.movies.loading,\r\n  movie: state.movies.movie\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchMovie, setLoading }\r\n)(Movie);","import {\r\n    SEARCH_MOVIE,\r\n    FETCH_MOVIES,\r\n    FETCH_MOVIE,\r\n    LOADING\r\n  } from '../actions/types';\r\n  \r\n  const initialState = {\r\n    text: '',\r\n    movies: [],\r\n    loading: false,\r\n    movie: []\r\n  };\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case SEARCH_MOVIE:\r\n        return {\r\n          ...state,\r\n          text: action.payload,\r\n          loading: false\r\n        };\r\n      case FETCH_MOVIES:\r\n        return {\r\n          ...state,\r\n          movies: action.payload,\r\n          loading: false\r\n        };\r\n      case FETCH_MOVIE:\r\n        return {\r\n          ...state,\r\n          movie: action.payload,\r\n          loading: false\r\n        };\r\n      case LOADING:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","import {combineReducers} from 'redux';\r\nimport searchReducer from './searchReducer';\r\n\r\nexport default combineReducers({\r\n    movies: searchReducer\r\n});","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools}  from 'redux-devtools-extension/developmentOnly';\r\nimport rootReducer from './reducers'\r\n\r\nconst middleware = [thunk];\r\nconst initialState ={};\r\n\r\nconst store = createStore(rootReducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\n    export default store;","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport './App.css';\n\nimport Navbar from './components/Navbar';\n\nimport Landing from './components/Landing';\nimport Movie from './components/Movie';\n\nimport store from './store';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div>\n            <Navbar />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/movie/:id\" component={Movie} />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}